{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/nonces": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nonce"
                ],
                "summary": "gets a nonce for a user to sign",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/public-users/actions/get": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "gets the user's public info from db",
                "parameters": [
                    {
                        "description": "addresses",
                        "name": "addresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetPublicUserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/users/{address}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "gets all the user's info from db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/users/{address}/actions/set-e2ee-key": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "add user's public key and key store info into db",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "publicKey",
                        "name": "publicKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "keyStore",
                        "name": "keyStore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        },
        "/users/{address}/actions/sign-in": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "binds the user's wallet address and create a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "nonce",
                        "name": "nonce",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "signature",
                        "name": "signature",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorInfo"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.ErrorInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "null.String": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "user.GetPublicUserData": {
            "type": "object",
            "properties": {
                "publicUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.PublicUser"
                    }
                }
            }
        },
        "user.GetUserData": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isOnline": {
                    "type": "boolean"
                },
                "keyStore": {
                    "$ref": "#/definitions/null.String"
                },
                "name": {
                    "$ref": "#/definitions/null.String"
                },
                "publicKey": {
                    "$ref": "#/definitions/null.String"
                },
                "seedMessage": {
                    "type": "string"
                }
            }
        },
        "user.LoginData": {
            "type": "object",
            "properties": {
                "isNew": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.PublicUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isOnline": {
                    "type": "boolean"
                },
                "name": {
                    "$ref": "#/definitions/null.String"
                },
                "publicKey": {
                    "$ref": "#/definitions/null.String"
                }
            }
        }
    }
}